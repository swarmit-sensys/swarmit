name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:

  build-bootloader-and-sample:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ["dotbot-v2", "dotbot-v3", "nrf5340dk"]
        config: ["Debug", "Release"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Build bootloader
        run: BUILD_TARGET=${{ matrix.target }} BUILD_CONFIG=${{ matrix.config }} DOCKER_TARGETS=bootloader make docker
      - name: Build sample
        run: BUILD_TARGET=${{ matrix.target }} BUILD_CONFIG=${{ matrix.config }} DOCKER_TARGETS=sample make docker
      - name: Upload artifact
        if: matrix.config == 'Debug'
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-bootloader-${{ matrix.target }}
          path: device/bootloader/Output/${{ matrix.target }}/${{ matrix.config }}/Exe/bootloader-${{ matrix.target }}.*

  build-netcore:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: ["Debug", "Release"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Build network core application
        run: BUILD_CONFIG=${{ matrix.config }} DOCKER_TARGETS=netcore make docker
      - name: Upload artifact
        if: matrix.config == 'Debug'
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-netcore
          path: device/network_core/Output/nrf5340-net/${{ matrix.config }}/Exe/netcore-nrf5340-net.*

  testbed-check:
    name: testbed-check (${{ matrix.os }}, python-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install --upgrade --requirement tests_requirements.txt
    - name: Run tox
      run: tox

  release:
    runs-on: ubuntu-latest
    needs:
      - build-netcore
      - build-bootloader-and-sample
      - testbed-check
    if: >-
      github.event_name == 'push' &&
      startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: python -m pip install hatch
      - name: Build python package
        run: python -m hatch build
      - name: Check dist/ content
        run: ls -lR ./dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
      - name: Download dotbot-v2 bootloader artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts-bootloader-dotbot-v2
          path: ./artifacts
      - name: Download dotbot-v3 bootloader artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts-bootloader-dotbot-v3
          path: ./artifacts
      - name: Download nrf5340dk bootloader artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts-bootloader-nrf5340dk
          path: ./artifacts
      - name: Download netcore artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts-netcore
          path: ./artifacts
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          artifacts: "artifacts/*"
          token: ${{ secrets.github_token }}
